@page "/login"
@using Blazored.LocalStorage
@using System.Text.Json.Nodes
@inject HttpClient Http
@inject ISyncLocalStorageService localStorage
@inject NavigationManager NavManager
@inject Server apiUrl

<h3>Login</h3>
@if (localStorage.GetItem<string>("token") == null)
{
    <div>
        <input type="text" @bind="username" placeholder="Nom d'utilisateur"/>
        <input type="password" @bind="password" placeholder="Mot de passe"/>
        <input type="submit" @onclick="logIn" content="Se connecter">
    </div>
}
@if (localStorage.GetItem<string>("token") != null)
{
    NavManager.NavigateTo("home");
}


@code {
    private string password;
    private string username;

    private async void logIn()
    {
        var logs = new Logs(username, password);
        var response = await Http.PostAsJsonAsync(apiUrl.getUrl() + "api/login_check", logs);

        var responseBody = await response.Content.ReadAsStringAsync();
        var responseJson = JsonNode.Parse(responseBody);

        localStorage.SetItem("token", responseJson["token"]);
        if (localStorage.GetItem<string>("token") != null)
        {
            var responseUser = await Http.GetAsync(apiUrl.getUrl() + "username/" + username);

            var responseBodyUser = await responseUser.Content.ReadAsStringAsync();
            var responseJsonUser = JsonNode.Parse(responseBodyUser);

            localStorage.SetItem("user_id", responseJsonUser["id"]);
            localStorage.SetItem("user_nom", responseJsonUser["nom"]);
            localStorage.SetItem("user_prenom", responseJsonUser["prenom"]);
            localStorage.SetItem("user_roles", responseJsonUser["role"][0]);

            NavManager.NavigateTo("/home",forceLoad: true);
        }
    }


}