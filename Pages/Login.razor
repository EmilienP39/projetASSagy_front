@page "/login"
@using System.Text.Json.Nodes
@inject HttpClient Http
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inject NavigationManager NavManager

<h3>Login</h3>
@if (localStorage.GetItem<string>("token") == null)
{
    <div>
        <input type="text" @bind="username" placeholder="Nom d'utilisateur"/>
        <input type="password" @bind="password" placeholder="Mot de passe"/>
        <input type="submit" @onclick="logIn" content="Se connecter"></div>
}
@if (localStorage.GetItem<string>("token") != null)
{
    NavManager.NavigateTo("home");
}


@code {
    private string password;
    private string username;

    private async void logIn()
    {
        Logs logs = new Logs(username, password);
        HttpResponseMessage response = await Http.PostAsJsonAsync("https://localhost:8000/api/login_check",logs);

        string responseBody = await response.Content.ReadAsStringAsync();
        var responseJson = JsonObject.Parse(responseBody);

        localStorage.SetItem("token",responseJson["token"]);
        if (localStorage.GetItem<string>("token") != null)
        {
            HttpResponseMessage responseUser = await Http.GetAsync("https://localhost:8000/username/" + username);
            
            string responseBodyUser = await responseUser.Content.ReadAsStringAsync();
            var responseJsonUser = JsonObject.Parse(responseBodyUser);
            
            localStorage.SetItem("user_id",responseJsonUser["id"]);
            localStorage.SetItem("user_nom",responseJsonUser["nom"]);
            localStorage.SetItem("user_prenom",responseJsonUser["prenom"]);
            localStorage.SetItem("user_roles",responseJsonUser["role"][0]);

            NavManager.NavigateTo("/home");
        }


    }


}